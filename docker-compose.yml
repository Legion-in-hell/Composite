version: '3.8'

services:
  db:
    container_name: composite_db
    image: postgres:latest
    restart: always
    networks:
      - database
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    env_file:
      - ./back/.env

  adminer:
    container_name: composite_adminer
    image: adminer
    ports:
      - 8080:8080

  cache:
    container_name: composite_cache
    image: redis:latest
    restart: always
    networks:
      - database
    depends_on:
      - db
    # ports:
    #   - 6379:6379
    volumes: 
      - ./cache:/data

  traefik:
    container_name: composite_gateway
    image: traefik:latest
    command:
      # - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8081:8080"
    networks:
      - database 

  api:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.back
    networks:
      - database
    depends_on:
      - db
    volumes:
      - ./back/.env:/app/back/.env
      - ./back/src:/app/back/src
      - ./back/test:/app/back/test
      - ./back/prisma:/app/back/prisma
      - ./packages/core/build:/app/packages/core/build
    env_file:
      - ./back/.env
    # ports:
      # - 3002:3002
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - traefik.http.services.api.loadbalancer.server.port=3002
      - traefik.http.services.api.loadBalancer.sticky.cookie.name=server_id
      - traefik.http.services.api.loadBalancer.sticky.cookie.httpOnly=true
      - traefik.http.middlewares.testheader.headers.accesscontrolalloworiginlist=http://localhost:3000
      - traefik.http.middlewares.testheader.headers.accessControlAllowCredentials=true
      - traefik.http.routers.api.middlewares=testheader

networks:
  database:
